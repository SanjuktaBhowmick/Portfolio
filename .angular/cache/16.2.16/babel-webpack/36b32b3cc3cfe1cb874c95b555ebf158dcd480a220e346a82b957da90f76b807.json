{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DarkModeService {\n  constructor() {\n    this.darkMode = false;\n  }\n  toggleDarkMode() {\n    const root = document.documentElement;\n    // const isDarkMode = root.style.getPropertyValue('--background-color') === '#272935';\n    const background_color_light = window.getComputedStyle(root).getPropertyValue('--background-color-light');\n    const font_color_light = window.getComputedStyle(root).getPropertyValue('--font-color-light');\n    const background_color_dark = window.getComputedStyle(root).getPropertyValue('--background-color-dark');\n    const font_color_dark = window.getComputedStyle(root).getPropertyValue('--font-color-dark');\n    const bg_dark = window.getComputedStyle(root).getPropertyValue('--bg-dark');\n    const bg_light = window.getComputedStyle(root).getPropertyValue('--bg-light');\n    if (this.darkMode) {\n      // root.style.setProperty(\"--background-color\", \"white\");\n      // root.style.setProperty(\"--font-color\", \"black\");\n      root.style.setProperty(\"--background-color\", background_color_light);\n      root.style.setProperty(\"--font-color\", font_color_light);\n      root.style.setProperty('--bg', bg_light);\n      this.darkMode = !this.darkMode;\n      console.log('Dark Mode ' + this.darkMode);\n    } else {\n      // root.style.setProperty('--background-color', '#272935');\n      // root.style.setProperty(\"--font-color\", \"white\");\n      root.style.setProperty('--background-color', background_color_dark);\n      root.style.setProperty('--font-color', font_color_dark);\n      root.style.setProperty('--bg', bg_dark);\n      this.darkMode = !this.darkMode;\n      console.log('Dark Mode ' + this.darkMode);\n    }\n  }\n  static {\n    this.ɵfac = function DarkModeService_Factory(t) {\n      return new (t || DarkModeService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DarkModeService,\n      factory: DarkModeService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}","map":{"version":3,"names":["DarkModeService","constructor","darkMode","toggleDarkMode","root","document","documentElement","background_color_light","window","getComputedStyle","getPropertyValue","font_color_light","background_color_dark","font_color_dark","bg_dark","bg_light","style","setProperty","console","log","factory","ɵfac","providedIn"],"sources":["/Users/kishankumarz/Documents/Sanjuktha_Bhowmick_Clone/Portfolio/src/app/services/dark-mode.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DarkModeService {\n  constructor() {}\n\n  darkMode = false;\n\n  toggleDarkMode(): void {\n    const root = document.documentElement;\n\n    // const isDarkMode = root.style.getPropertyValue('--background-color') === '#272935';\n\n    const background_color_light = window.getComputedStyle(root).getPropertyValue('--background-color-light');\n    const font_color_light = window.getComputedStyle(root).getPropertyValue('--font-color-light');\n    const background_color_dark = window.getComputedStyle(root).getPropertyValue('--background-color-dark');\n    const font_color_dark = window.getComputedStyle(root).getPropertyValue('--font-color-dark');\n\n    const bg_dark = window.getComputedStyle(root).getPropertyValue('--bg-dark');\n    const bg_light = window.getComputedStyle(root).getPropertyValue('--bg-light');\n\n\n    if (this.darkMode) {\n      // root.style.setProperty(\"--background-color\", \"white\");\n      // root.style.setProperty(\"--font-color\", \"black\");\n      root.style.setProperty(\"--background-color\", background_color_light);\n      root.style.setProperty(\"--font-color\", font_color_light);\n      root.style.setProperty('--bg', bg_light);\n      this.darkMode = !this.darkMode;\n      console.log('Dark Mode ' + this.darkMode);\n    } else {\n      // root.style.setProperty('--background-color', '#272935');\n      // root.style.setProperty(\"--font-color\", \"white\");\n      root.style.setProperty('--background-color', background_color_dark);\n      root.style.setProperty('--font-color',font_color_dark);\n      root.style.setProperty('--bg', bg_dark);\n      this.darkMode = !this.darkMode;\n      console.log('Dark Mode ' + this.darkMode);\n    }\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,eAAe;EAC1BC,YAAA;IAEA,KAAAC,QAAQ,GAAG,KAAK;EAFD;EAIfC,cAAcA,CAAA;IACZ,MAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAe;IAErC;IAEA,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC,CAACM,gBAAgB,CAAC,0BAA0B,CAAC;IACzG,MAAMC,gBAAgB,GAAGH,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC,CAACM,gBAAgB,CAAC,oBAAoB,CAAC;IAC7F,MAAME,qBAAqB,GAAGJ,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC,CAACM,gBAAgB,CAAC,yBAAyB,CAAC;IACvG,MAAMG,eAAe,GAAGL,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC,CAACM,gBAAgB,CAAC,mBAAmB,CAAC;IAE3F,MAAMI,OAAO,GAAGN,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC,CAACM,gBAAgB,CAAC,WAAW,CAAC;IAC3E,MAAMK,QAAQ,GAAGP,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC,CAACM,gBAAgB,CAAC,YAAY,CAAC;IAG7E,IAAI,IAAI,CAACR,QAAQ,EAAE;MACjB;MACA;MACAE,IAAI,CAACY,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAEV,sBAAsB,CAAC;MACpEH,IAAI,CAACY,KAAK,CAACC,WAAW,CAAC,cAAc,EAAEN,gBAAgB,CAAC;MACxDP,IAAI,CAACY,KAAK,CAACC,WAAW,CAAC,MAAM,EAAEF,QAAQ,CAAC;MACxC,IAAI,CAACb,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;MAC9BgB,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACjB,QAAQ,CAAC;KAC1C,MAAM;MACL;MACA;MACAE,IAAI,CAACY,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAEL,qBAAqB,CAAC;MACnER,IAAI,CAACY,KAAK,CAACC,WAAW,CAAC,cAAc,EAACJ,eAAe,CAAC;MACtDT,IAAI,CAACY,KAAK,CAACC,WAAW,CAAC,MAAM,EAAEH,OAAO,CAAC;MACvC,IAAI,CAACZ,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;MAC9BgB,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACjB,QAAQ,CAAC;;EAE7C;;;uBApCWF,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}